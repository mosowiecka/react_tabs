{"version":3,"sources":["components/Tab/TabInfo.tsx","components/Tabs/TabsInfo.tsx","App.tsx","index.tsx"],"names":["TabInfo","tab","isActive","onTabSelected","className","href","id","onClick","title","TabsInfo","tabs","selectedTabId","map","content","App","useState","setSelectedTabId","selectedTab","filter","tabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,cACvC,OACE,oBACEC,UAAWF,EAAW,YAAc,GACpC,UAAQ,MAFV,SAIE,mBACEG,KAAI,WAAMJ,EAAIK,IACd,UAAQ,UACRC,QAAS,kBAAMJ,EAAcF,EAAIK,KAHnC,SAKGL,EAAIO,WCVAC,EAAW,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,cAAeR,EAA0B,EAA1BA,cAC9C,OACE,6BACGO,EAAKE,KAAI,SAAAX,GAAG,OACX,cAAC,EAAD,CAEEA,IAAKA,EACLC,SAAUD,EAAIK,KAAOK,EACrBR,cAAeA,GAHVF,EAAIK,UCRNI,EAAO,CAClB,CAAEJ,GAAI,QAASE,MAAO,QAASK,QAAS,eACxC,CAAEP,GAAI,QAASE,MAAO,QAASK,QAAS,eACxC,CAAEP,GAAI,QAASE,MAAO,QAASK,QAAS,gBAG7BC,EAAM,WACjB,MAA0CC,mBAAS,SAAnD,mBAAOJ,EAAP,KAAsBK,EAAtB,KAMMC,EAAcP,EAAKQ,QAAO,SAACjB,GAAD,OAASA,EAAIK,KAAOK,KAAe,GAEnE,OACE,sBAAKP,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SACGO,EAAa,0BAAsBM,EAAYT,OAAU,KAG5D,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,cAAC,EAAD,CACEM,KAAMA,EACNC,cAAeA,EACfR,cAjBY,SAACgB,GACrBH,EAAiBG,QAoBb,qBAAKf,UAAU,QAAQ,UAAQ,aAA/B,SACGa,EAAYJ,iBClCvBO,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.39ef62ba.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab,\n  isActive: boolean,\n  onTabSelected: (tabId: string) => void,\n};\n\nexport const TabInfo = ({ tab, isActive, onTabSelected }:Props) => {\n  return (\n    <li\n      className={isActive ? 'is-active' : ''}\n      data-cy=\"Tab\"\n    >\n      <a\n        href={`#${tab.id}`}\n        data-cy=\"TabLink\"\n        onClick={() => onTabSelected(tab.id)}\n      >\n        {tab.title}\n      </a>\n    </li>\n  );\n};\n","import { Tab } from '../../types/Tab';\nimport { TabInfo } from '../Tab/TabInfo';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tabId: string) => void;\n};\n\nexport const TabsInfo = ({ tabs, selectedTabId, onTabSelected }:Props) => {\n  return (\n    <ul>\n      {tabs.map(tab => (\n        <TabInfo\n          key={tab.id}\n          tab={tab}\n          isActive={tab.id === selectedTabId}\n          onTabSelected={onTabSelected}\n        />\n      ))}\n    </ul>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { TabsInfo } from './components/Tabs/TabsInfo';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App = () => {\n  const [selectedTabId, setSelectedTabId] = useState('tab-1');\n\n  const onTabSelected = (tabId: string) => {\n    setSelectedTabId(tabId);\n  };\n\n  const selectedTab = tabs.filter((tab) => tab.id === selectedTabId)[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTabId ? `Selected tab is ${selectedTab.title}` : ''}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <TabsInfo\n            tabs={tabs}\n            selectedTabId={selectedTabId}\n            onTabSelected={onTabSelected}\n          />\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}