{"version":3,"sources":["components/Tab/TabInfo.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabInfo","tab","isActive","onTabSelected","className","href","id","onClick","title","Tabs","tabs","selectedTabId","selectedTabIdAdjusted","find","selectedTab","filter","map","content","App","useState","setSelectedTabId","ReactDOM","render","document","getElementById"],"mappings":"iMAQaA,EAAU,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,IAAKC,EAAoC,EAApCA,SAAUC,EAA0B,EAA1BA,cAKvC,OACE,oBACEC,UAAWF,EAAW,YAAc,GACpC,UAAQ,MAFV,SAIE,mBACEG,KAAI,WAAMJ,EAAIK,IACd,UAAQ,UACRC,QAZc,kBACjBL,GAAYC,EAAcF,IAQzB,SAKGA,EAAIO,WCdAC,EAAO,SAAC,GAAkD,IAAhDC,EAA+C,EAA/CA,KAAMC,EAAyC,EAAzCA,cAAeR,EAA0B,EAA1BA,cACpCS,EAAwBF,EAC3BG,MAAK,SAAAZ,GAAG,OAAIA,EAAIK,KAAOK,KAAiBA,EAAgBD,EAAK,GAAGJ,GAE7DQ,EAAcJ,EAAKK,QAAO,SAACd,GAAD,OAASA,EAAIK,KAAOM,KAAuB,GAE3E,OACE,sBAAKR,UAAU,UAAf,UACE,oBAAIA,UAAU,QAAd,SACGO,EAAa,0BAAsBG,EAAYN,OAAU,KAG5D,sBAAK,UAAQ,gBAAb,UACE,qBAAKJ,UAAU,gBAAf,SACE,6BACGM,EAAKM,KAAI,SAAAf,GAAG,OACX,cAAC,EAAD,CAEEA,IAAKA,EACLC,SAAUD,EAAIK,KAAOM,EACrBT,cAAeA,GAHVF,EAAIK,WASjB,qBAAKF,UAAU,QAAQ,UAAQ,aAA/B,SACGU,EAAYG,iBC7BVP,EAAO,CAClB,CAAEJ,GAAI,QAASE,MAAO,QAASS,QAAS,eACxC,CAAEX,GAAI,QAASE,MAAO,QAASS,QAAS,eACxC,CAAEX,GAAI,QAASE,MAAO,QAASS,QAAS,gBAG7BC,EAAgB,WAC3B,MAA0CC,mBAAST,EAAK,GAAGJ,IAA3D,mBAAOK,EAAP,KAAsBS,EAAtB,KAMA,OACE,cAAC,EAAD,CACEV,KAAMA,EACNC,cAAeA,EACfR,cARkB,SAACF,GACrBmB,EAAiBnB,EAAIK,QCdzBe,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.ff75d53e.chunk.js","sourcesContent":["import { Tab } from '../../types/Tab';\n\ntype Props = {\n  tab: Tab,\n  isActive: boolean,\n  onTabSelected: (tab: Tab) => void,\n};\n\nexport const TabInfo = ({ tab, isActive, onTabSelected }:Props) => {\n  const handleClick = () => (\n    !isActive && onTabSelected(tab)\n  );\n\n  return (\n    <li\n      className={isActive ? 'is-active' : ''}\n      data-cy=\"Tab\"\n    >\n      <a\n        href={`#${tab.id}`}\n        data-cy=\"TabLink\"\n        onClick={handleClick}\n      >\n        {tab.title}\n      </a>\n    </li>\n  );\n};\n","import { Tab } from '../../types/Tab';\nimport { TabInfo } from '../Tab/TabInfo';\n\ntype Props = {\n  tabs: Tab[],\n  selectedTabId: string,\n  onTabSelected: (tab: Tab) => void;\n};\n\nexport const Tabs = ({ tabs, selectedTabId, onTabSelected }:Props) => {\n  const selectedTabIdAdjusted = tabs\n    .find(tab => tab.id === selectedTabId) ? selectedTabId : tabs[0].id;\n\n  const selectedTab = tabs.filter((tab) => tab.id === selectedTabIdAdjusted)[0];\n\n  return (\n    <div className=\"section\">\n      <h1 className=\"title\">\n        {selectedTabId ? `Selected tab is ${selectedTab.title}` : ''}\n      </h1>\n\n      <div data-cy=\"TabsComponent\">\n        <div className=\"tabs is-boxed\">\n          <ul>\n            {tabs.map(tab => (\n              <TabInfo\n                key={tab.id}\n                tab={tab}\n                isActive={tab.id === selectedTabIdAdjusted}\n                onTabSelected={onTabSelected}\n              />\n            ))}\n          </ul>\n        </div>\n\n        <div className=\"block\" data-cy=\"TabContent\">\n          {selectedTab.content}\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\nimport { Tabs } from './components/Tabs';\nimport { Tab } from './types/Tab';\n\nexport const tabs = [\n  { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n  { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n  { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n];\n\nexport const App: React.FC = () => {\n  const [selectedTabId, setSelectedTabId] = useState(tabs[0].id);\n\n  const onTabSelected = (tab: Tab) => {\n    setSelectedTabId(tab.id);\n  };\n\n  return (\n    <Tabs\n      tabs={tabs}\n      selectedTabId={selectedTabId}\n      onTabSelected={onTabSelected}\n    />\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}